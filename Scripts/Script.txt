<1>

안녕하십니까 
이번에 여행지기 프로젝트를 담당하게 된 ESP 입니다. 
지금부터 여행지기 VR VOD 인프라 구축에 대한 설명을 시작하겠습니다.


<2>

목차입니다.
가장먼저 이번 프로젝트를 맡은 ESP 회사와 프로젝트를 의뢰한 클라이언트 소개해드리고
클라이언트의 요청사항과 그에따른 저희의 솔루션 설명 순서로 발표를 진행하겠습니다.

저는 회사소개와 클라이언트소개를 맡은 OOO입니다.


<3>
그러면 본격적으로 회사소개부터 시작하도록하겠습니다.

<4>
ESP는 Enhanced Service Partner라는 의미로 보다 더 나은 서비스를 제공하겠다라는 의미를 가지고 있습니다.
저희가 제공하는 서비스로는 네트워크 인프라구축, 보안 스크립트 제작, 클라우드 인프라관리가 있습니다.


<5>
다음으로는 클라이언트를 소개해드리겠습니다.


<6>
이번에 의뢰를 맡긴 클라이언트 "여행지기"는 2006년에 설립된 여행사입니다.
유럽, 아시아, 미대륙 등 다양한 국가의 여행을 즐길 수 있는 가이트 투어와  패키지상품을 제공하고 있으며 그 외에도 숙박 및 항공 예약 서비스도 제공하고있습니다.



<7>

워라벨에 대한 관심의 증가로 꾸준한 상승을 보이던 여행사의 매출은 코로나의 유행을 기점으로 급격하게 감소하게 됩니다.

갑작스러운 바이러스의 여파로 여행사들은 예정되어있던 모든 예약을 취소해야했고
각나라별 외국인 입국제한 및 금지 정책으로 인해 해외여행을 나갈 수 없는 상황에서 여행사는 계속 침체되어갔습니다. 

이에 여행지기에서는 고객들이 바이러스 감염이라는 걱정없이 안전하게 여행을 즐길 수있는 방법을 고민하게 되었고
그 결과는  


<8>
VR을 통한 여행입니다.
현재 각광 받고 있는 기술인 "VR"과 "여행"을 접목시켜 새로운 여행 패키지를 만들어보는 것은 어떨까 생각하게 되었습니다.

여행지기는 기존의 커넥션을 활용하여 현지 가이드 분이 직접 촬영한 영상과 VR기술을 통해 서비스를 제공할 예정이며
고객들은 해당 서비스를 통해 집안에서 여러나라를 방문하며 현지 가이드 투어를 하는 것과 같은 서비스를 제공받을 수있습니다. 


<9>
다음은 여행지기에서 이번 사업을 홍보하기 위해 추진하고 있는 SNS 이벤트입니다.
sns와 해시태그를 이용해 VR Tour를 홍보하고 젊은 층의 신규고객을 유치할 뿐아니라 
오랫동안 변화가 없었던 브랜드의 이미지를 깨뜨리고 현대적인 이미지로 변화시키기 위해 sns라는 홍보수단을 사용했습니다.

<10>
발표를 이어가겠습니다.
클라이언트의 요청사항과 그에맞는 솔루션 설명을 진행할 발표자 박유진입니다.

<11> 
한 연구결과에 따르면 sns를 이용한 홍보효과는 인스타그램을 기준으로 
방문자가 약 352퍼센트 증가한다고 합니다.
하지만 여행지기의 경우 자체 인프라망을 사용하기에는
창립 이후로 별도의 장비를 추가하거나 업그레이드하지 않았고
이벤트와 VR 스트리밍으로 발생할 트래픽에 대한 준비가 되어있지 않았습니다.
그래서 다음과 같은 요구사항을 제시합니다.

<12>
기존 인프라와 수월하게 연결되는 클라우드 환경
안정적인 VR VOD를 제공할 수 있는 환경
트래픽을 제어할 수 있는 인프라
고객의 중요정보를 지킬 수 있는 보안 강화
관리에 용이한 인프라 입니다.

<13>
앞서 여행지기에서 보낸 요청사항에 맞춰 저희가 구축한 솔루션을 먼저 간략하게 소개해드리겠습니다.

<14>
첫번째는 AWS 마이그레이션, 신규인프라를 aws를 통해 마이그레이션 시켜 기존인프라와 연결했습니다. 
두번째는 인프라 업그레이드, 로드밸런싱과 오토스케일링을 통해 트래픽 부담을 줄였습니다.
세번째가 Video on demand,
Vr 투어를 고객에게 제공할 수 있는 VOD인프라를 구축했습니다.
네번째는 보안강화,
AWS의 IAM, Security group을 통해 보안성을 강화했습니다.
마지막으로 관리의 용이성,
클라이언트가 해당 인프라를 편하고 효율적으로 관리할 수 있도록 
클라우드와치, 앤서블, 자빅스를 사용할 예정입니다.

<15>
먼저 AWS마이그레이션에 대해 자세하게 설명해 드리겠습니다.

<16>
지금 보고계시는 토폴로지가 기존 여행지기의 네트워크 인프라입니다. 
저희는 웹서버 부분을 AWS로 마이그레이션 했습니다.

<17>
다음 토폴로지가 저희가 구축한 클라우드 인프라입니다.
먼저 스트리밍 서비스를 위해 Cloudfront를 S3 bucket과 연결하여 업로드 되는 영상을 Route53을 통해 
사용자의 웹브라우저로 스트리밍할 수 있도록 배치했습니다.
가용영역 두개에 각각 public subnet 1개와 private subnet 2개를 배치해서 
ALB로 출입하는 트래픽에 대해 로드밸런싱하도록 했습니다.
public subnet에는 nat gateway와 bastion host를 둬서 private subet의 웹서버가 안전하게 외부와 연결되면서
서버를 관리하기가 용이하고 또 안전하도록 설계했습니다.
private subnet의 웹서버는 오토스케일링 그룹으로 지정해서 
트래픽이 집중되도 부하부담을 줄일 수 있도록 했고
다른 private subnet에는 RDS를 배치하여 데이터를 안전하게 보관하는 동시에
마스터와 슬래브로 각각 나누어서 자동으로 백업을 하도록 설정했습니다.

<18>
위에서 설명드린 클라우드를 저희는 클라우드 포메이션을 통해 구축했습니다.
FTUser라는 IAM유저를 생성하고 vpc와 Subnet, 인터넷 및 나트 게이트웨이, 인스턴스 그리고 rds를 구축했습니다.
클라우드 포메이션의 자세한 코드는 기술문서를 통해 확인하실 수 있습니다.

<19>
그리고 이렇게 구축한 클라우드를 기존의 인프라와 다이렉트 커넥트 기능을 통해 연결했습니다. 
다이렉트 커넥트는 하이브리드 클라우드를 구축할 때 필요한 기술로, 고속 데이터 전송을 할 수 있습니다.
다이렉트 커넥트를 사용하기 위해서는 
다이렉트 커넥스 위치 연결 크기를 결정하고 AWS관리콘솔에서 
연결요청을 생성, 승인서를 다운로드 받은 후
APN에게 협정서를 제공하여 연결을 설정하도록 요청합니다.
네트워크 연결을 설정하도록 가상 인터페이스를 구성하는 것으로
다이렉트 커넥트를 연결할 수 있습니다.
다음분께서 이어서 발표하겠습니다.

<20>

여행지기의 2번째 요구사항과 3번째 요구사항에 대한
솔루션 설명을 맞은 발표자 전소현입니다.

여행지기의 2번째 요구사항은 인프라 향상입니다.
이에 대한 솔루션으로 ESP에서는 


<21>

ALB 서비스를 사용했습니다.

ALB는 둘 이상의 가용영역에서 수신되는 
트래픽을  자동분산하는 기능을 가지고 있습니다.

이때 
자동분산 되는 과정에서 
등록된 대상의 상태를 
지속적으로 모니터링하여
비교적 상태가 
양호한 대상으로 
우선적으로 라우팅하기때문에

이벤트 등의 특수한 상황에서 트래픽을 관리하기에
필수적으로 필요한 서비스라고 할 수 있습니다.

오른쪽 사진자료는 웹서버를 
로드밸런싱 설정을 한 후 
사이트에 접속했을때
로드밸런싱 설정에 의해
랜덤하게 나오는 화면을 캡쳐한 자료입니다.


이때 
기존에 존재하던 2개의 웹서버와
오토스케일링에 의해 추가된 
2개의 웹인스턴스를 포함해
총 4개의 서버에서 사이트가 랜덤하게 
보여지는 것을 확인할 수있습니다.

<22>

다음 보이시는 페이지는 스티키 세션 설정에 대한 페이지입니다.


스티키 세션은 ELB의 옵션 중의 하나로
쿠키나 세션을 이용하여 사용자가 처음 접속한 서버로 
계속 접속되도록 분산되는 것을 돕는 옵션입니다.


로드밸런서 쿠키와 어플리케이션 쿠키 설정 2가지 방법이 있는데
저희는 어플리케이션 쿠키 설정 방법으로 5일동안 세션이 유지되도록
설정하였습니다.

<23>

인프라 향상에 대한 2번째 솔루션은 auto scaling입니다.


auto scaling 은 
애플리케이션을 모니터링하고 용량을 자동조정하여
안정적으로 성능을 유지할 수 있게 해 주는 서비스입니다.


여기서 용량은 오른쪽 사진자료와 같이 
auto scaling 을 설정할때 최소 용량, 원하는 용량, 최대용량의 형태로 지정하며
이때 지정된 용량범위 안에서 인스턴스를 생성 또는 삭제합니다.

auto scaling 은 모니터링 기능이 있기때문에 이벤트와 같이
갑자기 많은 트래픽이 발생할때 유리한 서비스이며

또한 
앞서 설명해드린 로드밸런싱과 
함께 사용할 경우 
auto scaling 에 의해 생성된 인스턴스가
자동으로 로드밸런서에 등록 및 취소되기때문에 더욱 유용하게 사용할 수 있습니다.

아래에 있는 자료는 시작구성 생성 사진입니다.

auto scaling 설정에는 인스턴스를 생성할때 사용될 시작구성을 필요로하는데 
웹사이트에 대한 트래픽제어가 목적이기때문에 
Web Server의 AMI를 이용하여 시작구성을 생성하였습니다.


<24>

지금보시는 페이지는 
오토스케일링 테스트 페이지입니다.


auto scaling 에 등록한 인스턴스의 CPU를 
인위적으로 올렸을때 
지정한 용량범위 안에서 
인스턴스가 잘 생성이 되는지 테스트를 진행해보았습니다.


왼쪽 상단에 있는 자료를 보시면 
새로운 WEB 인스턴스 2개가 생성되어서 
기존의 Web Server 2개를 포함해 
총 4개의 인스턴스가 동작되고있는것을 확인하실수있습니다.

<25>

다음은 3번째 요청사항에 대한 솔루션입니다.

여행지기의 경우 비자관리, 항공권예약과 같은 서비스를 제공하는 
여행사의 특성상 
고객의 중요정보를 가지고 있을 수 밖에 없습니다.


그렇기 때문에 더욱 향상된 보안기능을 요청사항으로 제시해 주셨습니다.

고객정보 보안에 대한 ESP의 첫번째 솔루션은 

<26>

IAM 입니다.

IAM은 Identify and Access Management의 약자로 
AWS 리소스에 대한 액세스를 안전하게 제어할 수 있는 서비스입니다.


IAM 서비스에서는 
유저와 유저그룹을 생성하고 
유저별로 
다른 역할과 권한을 부여함으로써 
현재 로그온한 계정에 대한 활동을 제어합니다.

또한 
계정에는 추가로 MFA 설정을 통해 보안을 강화할수있는데

MFA는 멀티팩터 인증을 의미하며 
등록된 디바이스의 코드를 제공해야 
계정에 접근할 수 있도록 
제한하는 설정입니다. 

쉽게 말해서 저희가 흔히 게임이나 금융서비스에 사용하는 
OTP 서비스라고 생각하시면 됩니다.

아래의 자료를 보시면 
CloudFormation을 통해 FTUSer 계정을 생성한 후에 
MFA 설정을 추가하여 보안을 강화하였습니다.

<27>

다음 솔루션은 Security Group을 이용한 보안 강화 방법입니다.

보안 그룹은 방화벽을 구축하여 
인바운드 
또는 
아웃바운드 트래픽을 제어하는 
AWS 서비스입니다.

생성한 보안그룹은 VPC, EC2의 인스턴스 등에 
다양하게 적용 가능하며
주로 
인스턴스에 사용하여 
허가 받지않은 IP대역대 
또는 포트로부터의 접근을 제어합니다.

아래의 자료를 보시면 

HTTP 인바운드를 허용하는 보안그룹과 
SSH의 인바운드를 허용하는 보안그룹을 생성하여 

각각 Bastion 호스트와 Web Server에 적용하였습니다. 

다음 솔루션 부터는 다음 발표자가 이어나가겠습니다.


<28~>

이번 VOD 단락부터 발표를 진행할 김재우라고 합니다.
먼저 VOD를 말하기 전에 온 디맨드에 대해 설명해드리겠습니다.
온 디맨드란 소비자가 있는 곳까지 찾아가서 상품과 서비스를 전달하는 것으로
이런 단에어 Video를 붙인 VOD는 통신망을 통해
사용자가 필요로 하는 때에 사용자가 원하는 영상을 제공하는 것을 뜻합니다.

ESP에서는 VOD를 구현하기 위해 이런 아키텍쳐를 사용했는데요.

먼저 소스 버킷에 원본 영상을 업로드합니다.
이후 아마존 람다가 미디어 컨버터에게 영상을 옮겨줍니다.
변환이 완료되면 아마존 클라우드 워치에게 연락이 가고
아마존 람다와 연계하여 SNS가 이메일을 전송합니다.
완료된 파일은 목적지 버킷에 저장되고
클라우드 프론트와 연계하여 전 세계에 배포될 준비를 시작합니다.

람다 서비스는 원하는 때마다 원하는 코드를 실행할 수 있는 서비스입니다.
본 프로젝트에서는 작업 완료, 자동 변환과 같은 곳에 사용되었습니다.

다음으로는 SNS 서비스입니다.
SNS 푸쉬 알림 서비스입니다.
완료 메세지를 이메일로 보낼 때 사용되었습니다.

이메일로 받은 스트리밍 주소를
개발자가 웹에 게시하면
이용자가 접속하여
VOD 서비스를 실행할 수 있습니다.

다음으로는 편의성 기능에 대해 설명해드리겠습니다.
편의성을 구현하기 위해 다음과 같은 시스템을 사용했습니다.

제일 먼저 클라우드 와치입니다.
앞에서 말했듯 SNS와 연계해서 이메일을 보내거나
혹은 인스턴스의 부하도를 확인하게 하여
고가용성을 높이는데에 사용했습니다.

다음은 엔서블입니다.
엔서블은 환경 자동화 도구입니다.
베스쳔 서버에 엔서블을 구성하여
좀 더 쉽게 웹 서버를 관리할 수 있게 하였습니다.

이때 플레이북으로 Lynis라는 오픈 소스 툴을 구성했습니다.
Lynis는 시스템 보안 감사 도구로서
시스템의 보안 이슈 및 설정 오류를 검사해줍니다.

마지막으로는 자빅스입니다.
자빅스는 실시간 모니터링 서비스로서
네트워크 및 하드웨어를 감시합니다.
관리자에게 실시간으로 장애 발생도 전달해줍니다.

실제로 다음과 같은 창이나 그래프로
에이전트의 상황을 한눈에 확인할 수 있습니다.
보시는 바와 같이 오류나 시스템 로드율이 그래프로 존재합니다.

그럼 본 프로젝트를 진행하기 위해 어떤 협업 툴을 사용했고
어떤 식으로 진행했는지 말씀드리고 발표를 마치겠습니다.

ESP에서는 다음과 같은 일정으로 진행했습니다.

협업을 위해 사용한 툴은 잔디이며,
잔디를 통해 일정이나 자료를 쉽게 공유하였습니다.

본 프로젝트를 구현한 기술문서나 템플릿 플레이북 등은
깃 허브에 모두 업로드해놨습니다.

역할 분담은 이런 식으로 진행하였습니다.

마지막으로 아쉬운점 좋았던 점을 후기로 남겨보았습니다.

그럼 이것으로 발표를 마칩니다. 감사합니다.


